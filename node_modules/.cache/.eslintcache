[{"/Users/echelon/Documents/GitHub/codelab-task/src/index.tsx":"1","/Users/echelon/Documents/GitHub/codelab-task/src/App.tsx":"2","/Users/echelon/Documents/GitHub/codelab-task/src/pages/Home.tsx":"3","/Users/echelon/Documents/GitHub/codelab-task/src/components/Navbar.tsx":"4","/Users/echelon/Documents/GitHub/codelab-task/src/hooks/userData.ts":"5","/Users/echelon/Documents/GitHub/codelab-task/src/components/Modal.tsx":"6","/Users/echelon/Documents/GitHub/codelab-task/src/components/FilterDropdown.tsx":"7","/Users/echelon/Documents/GitHub/codelab-task/src/components/User.tsx":"8","/Users/echelon/Documents/GitHub/codelab-task/src/components/UserCard.tsx":"9","/Users/echelon/Documents/GitHub/perizer-frontend/src/index.tsx":"10","/Users/echelon/Documents/GitHub/perizer-frontend/src/App.tsx":"11","/Users/echelon/Documents/GitHub/perizer-frontend/src/pages/Home.tsx":"12","/Users/echelon/Documents/GitHub/perizer-frontend/src/components/Navbar.tsx":"13","/Users/echelon/Documents/GitHub/perizer-frontend/src/components/User.tsx":"14","/Users/echelon/Documents/GitHub/perizer-frontend/src/hooks/userData.ts":"15","/Users/echelon/Documents/GitHub/perizer-frontend/src/components/UserCard.tsx":"16","/Users/echelon/Documents/GitHub/perizer-frontend/src/hooks/searchUserData.ts":"17"},{"size":308,"mtime":1698909797430,"results":"18","hashOfConfig":"19"},{"size":279,"mtime":1698910645299,"results":"20","hashOfConfig":"19"},{"size":271,"mtime":1698917143125,"results":"21","hashOfConfig":"19"},{"size":1758,"mtime":1698951546014,"results":"22","hashOfConfig":"19"},{"size":866,"mtime":1698916578853,"results":"23","hashOfConfig":"19"},{"size":4877,"mtime":1698965338845,"results":"24","hashOfConfig":"19"},{"size":2136,"mtime":1698963752760,"results":"25","hashOfConfig":"19"},{"size":4445,"mtime":1698967604710,"results":"26","hashOfConfig":"19"},{"size":1428,"mtime":1698967869032,"results":"27","hashOfConfig":"19"},{"size":308,"mtime":1698909797430,"results":"28","hashOfConfig":"29"},{"size":279,"mtime":1698910645299,"results":"30","hashOfConfig":"29"},{"size":271,"mtime":1698917143125,"results":"31","hashOfConfig":"29"},{"size":1760,"mtime":1700911994683,"results":"32","hashOfConfig":"29"},{"size":2112,"mtime":1700917062695,"results":"33","hashOfConfig":"29"},{"size":729,"mtime":1700916464456,"results":"34","hashOfConfig":"29"},{"size":1841,"mtime":1700917787829,"results":"35","hashOfConfig":"29"},{"size":1415,"mtime":1700916904608,"results":"36","hashOfConfig":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"brjn3z",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"diru96",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/echelon/Documents/GitHub/codelab-task/src/index.tsx",[],[],["91"],"/Users/echelon/Documents/GitHub/codelab-task/src/App.tsx",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/pages/Home.tsx",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/components/Navbar.tsx",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/hooks/userData.ts",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/components/Modal.tsx",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/components/FilterDropdown.tsx",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/components/User.tsx",[],[],"/Users/echelon/Documents/GitHub/codelab-task/src/components/UserCard.tsx",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/index.tsx",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/App.tsx",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/pages/Home.tsx",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/components/Navbar.tsx",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/components/User.tsx",["92"],[],"import React, { useState, useEffect } from \"react\";\nimport useUserData from \"../hooks/userData\";\nimport useSearchUserData from \"../hooks/searchUserData\";\nimport { UserData } from \"../hooks/userData.interface\";\nimport UserCard from \"./UserCard\";\n\ninterface GenderFilter {\n  id: number;\n  text: string;\n  checked: boolean;\n}\n\nconst User: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredUsers, setFilteredUsers] = useState<UserData[] | null>(null);\n\n  // Use the useUserData hook to get all users\n  const userData = useUserData();\n\n  // Use the useSearchUserData hook to search users based on criteria\n  const searchedUserData = useSearchUserData({ name: searchQuery });\n\n  useEffect(() => {\n    if (searchedUserData !== null) {\n      setFilteredUsers(searchedUserData);\n    } else if (userData !== null) {\n      setFilteredUsers(userData);\n    }\n  }, [searchedUserData, userData]);\n\n  const totalUser = filteredUsers ? filteredUsers.length : 0;\n\n  const handleSearchQueryChange = (query: string) => {\n    setSearchQuery(query);\n  };\n\n  return (\n    <div className=\"flex flex-col pt-10\">\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-neutral-900 flex flex-col gap-1\">\n          <p className=\"font-[degularbold] text-2xl\">{totalUser} Users</p>\n          <p className=\"font-[degularmedium] text-gray-600\">You can search for users by name, email, gender, role, or team</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <input\n            className=\"bg-gray-100 text-neutral-900 p-4 items-center flex gap-2 rounded-full font-[degularsemibold] h-12\"\n            placeholder=\"Search users\"\n            value={searchQuery}\n            onChange={(e) => handleSearchQueryChange(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"w-full border-t mt-4 border-gray-300\" />\n      <div className=\"flex flex-col gap-4 pt-6\">\n        {filteredUsers !== null ? filteredUsers.map((user, index) => <UserCard key={index} user={user} />) : \"Loading...\"}\n      </div>\n    </div>\n  );\n};\n\nexport default User;\n",["93"],"/Users/echelon/Documents/GitHub/perizer-frontend/src/hooks/userData.ts",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/components/UserCard.tsx",[],[],"/Users/echelon/Documents/GitHub/perizer-frontend/src/hooks/searchUserData.ts",[],[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":7,"column":11,"nodeType":"98","messageId":"99","endLine":7,"endColumn":23},{"ruleId":"94","replacedBy":"100"},"no-new-object",["101"],"@typescript-eslint/no-unused-vars","'GenderFilter' is defined but never used.","Identifier","unusedVar",["101"],"no-object-constructor"]