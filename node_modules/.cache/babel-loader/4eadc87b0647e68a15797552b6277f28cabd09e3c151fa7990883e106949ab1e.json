{"ast":null,"code":"var _jsxFileName = \"/Users/echelon/Documents/GitHub/codelab-task/src/components/FilterDropdown.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterDropdown = ({\n  items,\n  onItemCheck,\n  onSelect,\n  // Add onSelect prop\n  selectedItems,\n  onToggleDropdown,\n  dropdownVisible,\n  buttonText\n}) => {\n  const handleItemClick = item => {\n    const updatedSelectedItems = [...selectedItems];\n    const index = updatedSelectedItems.findIndex(i => i.id === item.id);\n    if (index !== -1) {\n      // If the item is in the selected items array, toggle its checked property\n      updatedSelectedItems[index] = {\n        ...item,\n        checked: !item.checked\n      };\n    } else {\n      // If the item is not in the selected items array, add it\n      updatedSelectedItems.push(item);\n    }\n\n    // Call the onSelect prop to update the parent component's state\n    onSelect(updatedSelectedItems);\n\n    // Call the onItemCheck prop to handle any additional logic\n    onItemCheck(item.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block text-left\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onToggleDropdown,\n      className: \"h-12 bg-white rounded-md px-4 py-2 text-sm border-neutral-900 border-2 font-[degularsemibold] justify-center text-center w-full\",\n      children: selectedItems.length === 0 ? buttonText : selectedItems.map(item => item.text).join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute left-0 w-full bg-white border border-gray-200 rounded-md shadow-lg z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"py-2\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center px-4 py-2 cursor-pointer text-base font-[degularsemibold]\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mr-2 h-4 w-4 text-neutral-900\",\n            checked: item.checked,\n            onChange: () => handleItemClick(item) // Use the new function\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterDropdown;\nexport default FilterDropdown;\nvar _c;\n$RefreshReg$(_c, \"FilterDropdown\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FilterDropdown","items","onItemCheck","onSelect","selectedItems","onToggleDropdown","dropdownVisible","buttonText","handleItemClick","item","updatedSelectedItems","index","findIndex","i","id","checked","push","className","children","onClick","length","map","text","join","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/echelon/Documents/GitHub/codelab-task/src/components/FilterDropdown.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface FilterDropdownProps {\n  items: { id: number; text: string; checked: boolean }[];\n  onItemCheck: (id: number) => void;\n  onSelect: (selected: { id: number; text: string; checked: boolean }[]) => void; // Add onSelect prop\n  selectedItems: { id: number; text: string; checked: boolean }[];\n  onToggleDropdown: () => void;\n  dropdownVisible: boolean;\n  buttonText: string;\n}\n\nconst FilterDropdown: React.FC<FilterDropdownProps> = ({\n  items,\n  onItemCheck,\n  onSelect, // Add onSelect prop\n  selectedItems,\n  onToggleDropdown,\n  dropdownVisible,\n  buttonText,\n}) => {\n  const handleItemClick = (item: { id: number; text: string; checked: boolean }) => {\n    const updatedSelectedItems = [...selectedItems];\n    const index = updatedSelectedItems.findIndex((i) => i.id === item.id);\n\n    if (index !== -1) {\n      // If the item is in the selected items array, toggle its checked property\n      updatedSelectedItems[index] = { ...item, checked: !item.checked };\n    } else {\n      // If the item is not in the selected items array, add it\n      updatedSelectedItems.push(item);\n    }\n\n    // Call the onSelect prop to update the parent component's state\n    onSelect(updatedSelectedItems);\n\n    // Call the onItemCheck prop to handle any additional logic\n    onItemCheck(item.id);\n  };\n\n  return (\n    <div className=\"relative inline-block text-left\">\n      <button\n        onClick={onToggleDropdown}\n        className=\"h-12 bg-white rounded-md px-4 py-2 text-sm border-neutral-900 border-2 font-[degularsemibold] justify-center text-center w-full\"\n      >\n        {selectedItems.length === 0 ? buttonText : selectedItems.map((item) => item.text).join(\", \")}\n      </button>\n      {dropdownVisible && (\n        <div className=\"absolute left-0 w-full bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n          <ul className=\"py-2\">\n            {items.map((item) => (\n              <li key={item.id} className=\"flex items-center px-4 py-2 cursor-pointer text-base font-[degularsemibold]\">\n                <input\n                  type=\"checkbox\"\n                  className=\"mr-2 h-4 w-4 text-neutral-900\"\n                  checked={item.checked}\n                  onChange={() => handleItemClick(item)} // Use the new function\n                />\n                <span>{item.text}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FilterDropdown;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1B,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,KAAK;EACLC,WAAW;EACXC,QAAQ;EAAE;EACVC,aAAa;EACbC,gBAAgB;EAChBC,eAAe;EACfC;AACF,CAAC,KAAK;EACJ,MAAMC,eAAe,GAAIC,IAAoD,IAAK;IAChF,MAAMC,oBAAoB,GAAG,CAAC,GAAGN,aAAa,CAAC;IAC/C,MAAMO,KAAK,GAAGD,oBAAoB,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;IAErE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB;MACAD,oBAAoB,CAACC,KAAK,CAAC,GAAG;QAAE,GAAGF,IAAI;QAAEM,OAAO,EAAE,CAACN,IAAI,CAACM;MAAQ,CAAC;IACnE,CAAC,MAAM;MACL;MACAL,oBAAoB,CAACM,IAAI,CAACP,IAAI,CAAC;IACjC;;IAEA;IACAN,QAAQ,CAACO,oBAAoB,CAAC;;IAE9B;IACAR,WAAW,CAACO,IAAI,CAACK,EAAE,CAAC;EACtB,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CnB,OAAA;MACEoB,OAAO,EAAEd,gBAAiB;MAC1BY,SAAS,EAAC,iIAAiI;MAAAC,QAAA,EAE1Id,aAAa,CAACgB,MAAM,KAAK,CAAC,GAAGb,UAAU,GAAGH,aAAa,CAACiB,GAAG,CAAEZ,IAAI,IAAKA,IAAI,CAACa,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,EACRrB,eAAe,iBACdP,OAAA;MAAKkB,SAAS,EAAC,kFAAkF;MAAAC,QAAA,eAC/FnB,OAAA;QAAIkB,SAAS,EAAC,MAAM;QAAAC,QAAA,EACjBjB,KAAK,CAACoB,GAAG,CAAEZ,IAAI,iBACdV,OAAA;UAAkBkB,SAAS,EAAC,6EAA6E;UAAAC,QAAA,gBACvGnB,OAAA;YACE6B,IAAI,EAAC,UAAU;YACfX,SAAS,EAAC,+BAA+B;YACzCF,OAAO,EAAEN,IAAI,CAACM,OAAQ;YACtBc,QAAQ,EAAEA,CAAA,KAAMrB,eAAe,CAACC,IAAI,CAAE,CAAC;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACF5B,OAAA;YAAAmB,QAAA,EAAOT,IAAI,CAACa;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAPjBlB,IAAI,CAACK,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACG,EAAA,GAvDI9B,cAA6C;AAyDnD,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}